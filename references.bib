@article{turing1936computable,
  title   = {On computable numbers, with an application to the Entscheidungsproblem},
  author  = {Turing, Alan Mathison and others},
  journal = {J. of Math},
  volume  = {58},
  number  = {345-363},
  pages   = {5},
  year    = {1936}
}

@article{von_nuemann_architecture,
  author  = {von Neumann, J.},
  journal = {IEEE Annals of the History of Computing},
  title   = {First draft of a report on the EDVAC},
  year    = {1993},
  volume  = {15},
  number  = {4},
  pages   = {27-75},
  doi     = {10.1109/85.238389}
}

@article{quicksort,
  author   = {Hoare, C. A. R.},
  title    = {{Quicksort}},
  journal  = {The Computer Journal},
  volume   = {5},
  number   = {1},
  pages    = {10-16},
  year     = {1962},
  month    = {01},
  abstract = {{A description is given of a new method of sorting in the random-access store of a computer. The method compares very favourably with other known methods in speed, in economy of storage, and in ease of programming. Certain refinements of the method, which may be useful in the optimization of inner loops, are described in the second part of the paper.}},
  issn     = {0010-4620},
  doi      = {10.1093/comjnl/5.1.10},
  url      = {https://doi.org/10.1093/comjnl/5.1.10},
  eprint   = {https://academic.oup.com/comjnl/article-pdf/5/1/10/1111445/050010.pdf}
}

@article{radix_sort,
  author   = {Davis, I. J.},
  title    = {{A Fast Radix Sort}},
  journal  = {The Computer Journal},
  volume   = {35},
  number   = {6},
  pages    = {636-642},
  year     = {1992},
  month    = {12},
  abstract = {{Almost all computers regularly sort data. Many different sort algorithms have therefore been proposed, and the properties of these algorithms studied in great detail. It is known that no sort algorithm based on key comparisons can sort N keys in less than O(N log N) operations, and that many perform O(N2) operations in the worst case. The radix sort has the attractive feature that it can sort N keys in O(N) operations, and it is therefore natural to consider methods of implementing such a sort efficiently.In this paper one efficient implementation of a radix sort is presented, and the performance of this algorithm compared with that of Quicksort. Empirical results are presented which suggest that this implementation of a radix sort is significantly faster than Quicksort, and that it therefore has wide applicability.}},
  issn     = {0010-4620},
  doi      = {10.1093/comjnl/35.6.636},
  url      = {https://doi.org/10.1093/comjnl/35.6.636},
  eprint   = {https://academic.oup.com/comjnl/article-pdf/35/6/636/1009342/35-6-636.pdf}
}

@article{floyd_algorithm,
  author     = {Floyd, Robert W.},
  title      = {Algorithm 97: Shortest Path},
  year       = {1962},
  issue_date = {June 1962},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {5},
  number     = {6},
  issn       = {0001-0782},
  url        = {https://doi.org/10.1145/367766.368168},
  doi        = {10.1145/367766.368168},
  journal    = {Commun. ACM},
  month      = {jun},
  pages      = {345},
  numpages   = {5}
}